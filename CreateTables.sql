/*
DROP TABLE TRANSCRIPT;
DROP TABLE FBPAGEREGISTER;
DROP TABLE FBPOST;  
DROP TABLE FBPAGE;  
DROP TABLE FBUSER;
DROP TABLE LINWORKS;
DROP TABLE LINCOMPANY;
DROP TABLE LINPOST;
DROP TABLE LINGROUPPAGEREG;
DROP TABLE LINGROUPPAGE;
DROP TABLE LINUSER;
DROP TABLE TEACHES;   
DROP TABLE SECTION;
DROP TABLE COURSE;  
DROP TABLE STUDENT;
DROP TABLE FACULTY_PERSON;
DROP TABLE GRAD_STUDENT;
DROP TABLE PERSON;
DROP TABLE DEPARTMENT;
DROP TABLE ACADEMIC_UNIT;
*/
CREATE TABLE ACADEMIC_UNIT (
  AUNo int NOT NULL,
  AUName varchar(20) NOT NULL,
  CONSTRAINT ACADEMIC_UNIT_PK
    PRIMARY KEY(AUNo)
);

CREATE TABLE DEPARTMENT (
  DeptNo int NOT NULL,
  DeptName varchar(30) NOT NULL,
  Address varchar(50) NOT NULL,
  AUNo int NOT NULL,
  CONSTRAINT DEPARTMENT_PK
    PRIMARY KEY(DeptNo),
  CONSTRAINT DEPARTMENT_AU_FK
    FOREIGN KEY(AUNo) REFERENCES ACADEMIC_UNIT(AUNo)
);

CREATE TABLE PERSON (
  TCNumber varchar(11) NOT NULL,
  Fname   varchar(15)   NOT NULL,
  Lname   varchar(15)    NOT NULL,
  Email varchar(30) NOT NULL,
  Bdate   Date,
  Address   varchar(30),
  Sex   char,  
  Type varchar(3) NOT NULL,
  CONSTRAINT PERSON_PK
    PRIMARY KEY(TCNumber),
  CONSTRAINT EMAIL_UNIQUE
    UNIQUE(Email)
);

CREATE TABLE STUDENT (
  SNo varchar(7) NOT NULL,
  TCNumber varchar(11) NOT NULL,
  Type varchar(9) NOT NULL,
  Class int NOT NULL,
  SemesterNo int NOT NULL,
  CumulativeAverage float,
  DeptNo int NOT NULL,
  StartDate date NOT NULL,
  CONSTRAINT STUDENT_PK
    PRIMARY KEY(Sno),
  CONSTRAINT STUDENT_PERSON_FK
    FOREIGN KEY(TCNumber) REFERENCES PERSON(TCNumber),
  CONSTRAINT STUDENT_PERSON_DEPT_FK
    FOREIGN KEY(DeptNo) REFERENCES DEPARTMENT(DeptNo)
);

CREATE TABLE FACULTY_PERSON (
  LecturerNo int NOT NULL,
  Title varchar(10),
  TCNumber varchar(11) NOT NULL,
  DeptNo int NOT NULL,
  CONSTRAINT FACULTY_PERSON_PK
    PRIMARY KEY(LecturerNo),
  CONSTRAINT FACULTY_PERSON_FK
    FOREIGN KEY(TCNumber) REFERENCES PERSON(TCNumber),
  CONSTRAINT FACULTY_PERSON_DEPT_FK
    FOREIGN KEY(DeptNo) REFERENCES DEPARTMENT(DeptNo)
);

CREATE TABLE GRAD_STUDENT (
  GSNo int NOT NULL,
  TCNumber varchar(11) NOT NULL,
  DeptName varchar(30) NOT NULL,
  Degree int NOT NULL,
  Year int NOT NULL,
  CONSTRAINT GRAD_STUDENT_PK
    PRIMARY KEY(GSNo),
  CONSTRAINT GRAD_STUDENT_PERSON_FK
    FOREIGN KEY(TCNumber) REFERENCES PERSON(TCNumber)
);

CREATE TABLE COURSE (
  CourseNo int NOT NULL,
  CourseName varchar(15) NOT NULL,
  Class int NOT NULL,
  Qtr varchar(10) NOT NULL,
  SemesterNo int NOT NULL,
  ECTS int NOT NULL,
  DeptNo int NOT NULL,
  CONSTRAINT COURSE_PK
    PRIMARY KEY(CourseNo),
  CONSTRAINT COURSE_DEPT_FK
    FOREIGN KEY(DeptNo) REFERENCES DEPARTMENT(DeptNo)
);

CREATE TABLE SECTION (
  SectionNo int NOT NULL,
  LecturerNo int NOT NULL,
  Min_Grade int NOT NULL,
  Sem_Year int NOT NULL,
  Sem_Qtr varchar(15) NOT NULL,
  CourseNo int NOT NULL,
  CONSTRAINT SECTION_PK
    PRIMARY KEY(SectionNo),
  CONSTRAINT SECTION_COURSE_FK
    FOREIGN KEY(CourseNo) REFERENCES COURSE(CourseNo),
  CONSTRAINT SECTION_FACULTY_PERSON_FK
    FOREIGN KEY(LecturerNo) REFERENCES FACULTY_PERSON(LecturerNo)
);

CREATE TABLE TRANSCRIPT ( --RELATION--
  SectionNo int NOT NULL,
  SNo varchar(7) NOT NULL,
  Grade int,
  CONSTRAINT TRANSCRIPT_SECTION_FK
    FOREIGN KEY(SectionNo) REFERENCES SECTION(SectionNo),
  CONSTRAINT TRANSCRIPT_STUDENT_FK
    FOREIGN KEY(SNo) REFERENCES STUDENT(SNo)
);

CREATE TABLE FBUSER (
  Fb_id varchar(30) not null,  
  CONSTRAINT FBUSER_PK
    PRIMARY KEY (Fb_id),
  CONSTRAINT FBUSER_PERSON_FK
    FOREIGN KEY (Fb_id) REFERENCES PERSON(Email) 
);

CREATE TABLE FBPAGE(
  Page_ID INT not null,
  Page_name varchar(30) not null,
  Admin_id varchar(15) not null,
  CONSTRAINT FBPAGE_PK
    PRIMARY KEY(Page_ID),
  CONSTRAINT FBPAGE_FBUSER_FK
    FOREIGN KEY(Admin_id) REFERENCES FBUSER(Fb_id),
  CONSTRAINT FBPAGE_SECTIION 
    FOREIGN KEY(Page_ID) REFERENCES SECTION(SectionNo)    
);

CREATE TABLE FBPOST(
  Post_no int not null,
  Fb_id varchar(15) not null,
  Page_ID INT not null,
  Post_content varchar(200) not null,
  CONSTRAINT FBPOST_PK 
    PRIMARY KEY(Post_no),
  CONSTRAINT FBPOST_FBUSER_FK
    FOREIGN KEY(Fb_id) REFERENCES FBUSER(Fb_id),
  CONSTRAINT FBPOST_FBPAGE_FK
    FOREIGN KEY(Page_ID) REFERENCES FBPAGE(Page_ID)
);

CREATE TABLE FBPAGEREGISTER(
  Page_ID INT not null,
  Fb_id varchar(15) not null,
  CONSTRAINT FBPAGEREGISTER_PAGE_FK
    FOREIGN KEY(Page_ID) REFERENCES FBPAGE(Page_ID),
  CONSTRAINT FBPAGEREGISTER_FBUSER_FK
    FOREIGN KEY(Fb_id) REFERENCES FBUSER(Fb_id)
);

CREATE TABLE LINCOMPANY(
  CompanyId varchar(15) not null,
  CompanyName varchar(20) not null,
  Description varchar(50),  
  CONSTRAINT LINCOMPANY_PK
    PRIMARY KEY(CompanyId)  
);

CREATE TABLE LINUSER(
  LI_id varchar(30) not null,
  Exp varchar(60),
  summary varchar(60),
  Type varchar(3) not null, --tcr: teacher  grd: graduate  std: student
  CONSTRAINT LINUSER_PK
    PRIMARY KEY(LI_id),
  CONSTRAINT LINUSER_PERSON_FK
    FOREIGN KEY(LI_id) REFERENCES PERSON(Email)
);

CREATE TABLE LINWORKS(
  LI_id varchar(15) not null,
  CompanyId varchar(15) not null,
  RecentlyWorks char not null,   --o an çalýþýyor mu onu tutar. f ise önceden çalýþmýþtýr. t ise þuan çalýþýyordur.
  CONSTRAINT LINWORKS_LINUSER
    FOREIGN KEY(LI_id) REFERENCES LINUSER(LI_id),
  CONSTRAINT LINWORKS_LINCOMPANY
    FOREIGN KEY(CompanyId) REFERENCES LINCOMPANY(CompanyId)  
);

CREATE TABLE LINGROUPPAGE(
  GroupPageNo int not null,
  Page_name varchar(30) not null,
  Admin_id varchar(15) not null,
  CONSTRAINT LINGROUPPAGE_PK
    PRIMARY KEY(GroupPageNo),
  CONSTRAINT LINGROUPPAGE_LINUSER_FK
    FOREIGN KEY(Admin_id) REFERENCES LINUSER(LI_id)
);

CREATE TABLE LINGROUPPAGEREG(
  GroupPageNo int not null,
  LI_id varchar(15) not null,
  CONSTRAINT LINGROUPPAGEREG_USER_FK
    FOREIGN KEY(LI_id) REFERENCES LINUSER(LI_id),
  CONSTRAINT LINGROUPPAGEREG_PAGE_FK
    FOREIGN KEY(GroupPageNo) REFERENCES LINGROUPPAGE(GroupPageNo)
);

CREATE TABLE LINPOST (
  PostNo int NOT NULL,
  Content varchar(60) NOT NULL,
  LI_id varchar(15) NOT NULL,
  GroupPageNo int NOT NULL,
  CONSTRAINT LINPOST_PK
    PRIMARY KEY(PostNo),
  CONSTRAINT LINPOST_LINUSER_FK
    FOREIGN KEY(LI_id) REFERENCES LINUSER(LI_id),
  CONSTRAINT LINPOST_LINPAGE_FK
    FOREIGN KEY(GroupPageNo) REFERENCES LINGROUPPAGE(GroupPageNo)
);
